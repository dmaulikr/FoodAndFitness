#!/bin/bash

# DEV ENV

# update submodule if need
if [[ "$CI" != 'true' ]]; then
    git submodule update --init --recursive
fi

# homebrew
if ! which brew > /dev/null; then
    sudo chown -R "$(whoami)":admin '/usr/local'
    /usr/bin/ruby -e "$(curl -fsSL 'https://raw.githubusercontent.com/Homebrew/install/master/install')"
    sudo chown -R "$(whoami)":admin '/Library/Caches/Homebrew'
fi

brew update

# rbenv
if ! which rbenv > /dev/null; then
    echo 'install rbenv'
    brew install rbenv
    eval "$(rbenv init -)"
    echo 'which rbenv > /dev/null && eval "$(rbenv init -)"' >> ~/.bashrc
fi
brew update
brew link pkg-config || true
brew outdated ruby-build || brew upgrade ruby-build

# compile ruby via clang
export RBENV=/usr/local/var/rbenv
ln -sf ~/.rbenv $RBENV
export RUBY_VER="$(cat .ruby-version)"
if ! cat $RBENV/clang | grep $RUBY_VER; then
    export CC=clang
    export CONFIGURE_OPTS="--with-gcc=clang --enable-shared"
    echo 'n' | rbenv install $RUBY_VER
    rbenv rehash
    echo "$RUBY_VER" >> $RBENV/clang
fi

gem install bundler

# PROJECT DEPENDENCES

bundle install --path=vendor/bundle --jobs 4 --retry 3

brew tap Homebrew/bundle
brew bundle

if ! bundle exec pod install; then
    echo 'Setup cocoapods...'
    bundle exec pod setup --silent > /dev/null
    bundle exec pod repo update --silent
    bundle exec pod install
fi
